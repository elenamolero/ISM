// Mocks generated by Mockito 5.4.4 from annotations
// in petuco/test/user_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:petuco/data/services/model/user_response.dart' as _i4;
import 'package:petuco/data/services/user/user_service.dart' as _i2;
import 'package:petuco/domain/entities/user.entity.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i2.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.UserResponse?> getUserInfo(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserInfo,
          [email],
        ),
        returnValue: _i3.Future<_i4.UserResponse?>.value(),
      ) as _i3.Future<_i4.UserResponse?>);

  @override
  _i3.Future<void> saveUserInfo(_i5.User? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUserInfo,
          [user],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> registerUserInfo(_i5.User? user) => (super.noSuchMethod(
        Invocation.method(
          #registerUserInfo,
          [user],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> loginUser(_i5.User? user) => (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [user],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
